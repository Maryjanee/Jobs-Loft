{"version":3,"sources":["assets/loading.svg","services/axios.js","services/job.service.js","types/index.js","actions/job.action.js","components/JobTypeFilter.js","helpers/daysDiff.js","helpers/ago.js","containers/JobList.js","assets/back.svg","containers/Job.js","components/Header.js","components/App.js","reportWebVitals.js","reducers/jobs.js","reducers/filter.js","reducers/index.js","Store.js","index.js"],"names":["console","log","process","axios","create","baseURL","headers","a","get","post","GET_JOBS_REQUEST","GET_JOBS_SUCCESS","GET_JOBS_ERROR","FILTER_JOB_TYPES","getJobsSuccess","jobs","type","payload","jobTypes","JobTypeFilter","handleFilterChange","data-test","name","id","onChange","event","value","target","map","jobType","daysDiff","date","date1","Date","daysDifference","getTime","Math","floor","ago","days","JobList","error","pending","filter","useState","filteredJobs","setFilteredJobs","useEffect","filtered","job","className","category","src","loader","alt","to","company_logo","title","company","location","created_at","defaultProps","connect","state","jobReducer","filterReducer","dispatch","jobId","useParams","setJob","matchedJob","find","back","dangerouslySetInnerHTML","__html","description","href","company_url","rel","Header","fetchJobs","jobService","getJobs2","data","errorMsg","message","path","exact","component","Job","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","jobsReducer","action","categories","rootReducer","combineReducers","Store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.7ec837ef.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/loading.ca2aa7b4.svg\";","import axios from 'axios';\n\nconsole.log('baseurl', process.env.REACT_APP_BASE_URL);\n\nexport default axios.create({\n  baseURL: process.env.REACT_APP_BASE_URL,\n  headers: {\n    'Access-Control-Allow-Origin': '*',\n    // Authorization: `Bearer ${process.env.REACT_APP_AUTH_TOKEN}`,\n  },\n});\n","import axios from './axios';\n\nconst token = process.env.REACT_APP_AUTH_TOKEN;\n\nclass JobService {\n  // eslint-disable-next-line class-methods-use-this\n  async getJobs() {\n    // eslint-disable-next-line no-return-await\n    return await axios.get('/positions.json');\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  async getJobs2() {\n    // eslint-disable-next-line no-return-await\n    return await axios.post(`/${token}`);\n  }\n}\n\nexport default new JobService();\n","export const GET_JOBS_REQUEST = 'GET_JOBS_REQUEST';\nexport const GET_JOBS_SUCCESS = 'GET_JOBS_PROCESSED';\nexport const GET_JOBS_ERROR = 'GET_JOBS_ERROR';\nexport const FILTER_JOB_TYPES = 'FILTER_JOB_TYPES';\n","import jobService from '../services/job.service';\nimport {\n  GET_JOBS_ERROR, GET_JOBS_SUCCESS, GET_JOBS_REQUEST, FILTER_JOB_TYPES,\n} from '../types';\n\nexport const getJobsRequest = () => ({\n  type: GET_JOBS_REQUEST,\n});\n\nexport const getJobsSuccess = jobs => ({\n  type: GET_JOBS_SUCCESS,\n  payload: jobs,\n});\n\nexport const getJobsError = error => ({\n  type: GET_JOBS_ERROR,\n  payload: error,\n});\n\nexport const filterJobTypes = jobType => ({\n  type: FILTER_JOB_TYPES,\n  payload: jobType,\n});\n\nexport const fetchJobs = () => async dispatch => {\n  dispatch(getJobsRequest());\n  try {\n    const { data: jobs } = await jobService.getJobs2();\n    console.log('jobs', jobs);\n    dispatch(getJobsSuccess(jobs));\n  } catch (error) {\n    const errorMsg = error.message;\n    dispatch(getJobsError(errorMsg));\n  }\n  // axios\n  //   .get('/positions.json')\n  //   .then(response => {\n  //     const jobs = response.data;\n  //     dispatch(getJobsSuccess(jobs));\n  //   })\n  //   .catch(error => {\n  //     const errorMsg = error.message;\n  //     dispatch(getJobsError(errorMsg));\n  //   });\n};\n","import PropTypes from 'prop-types';\n\nconst jobTypes = [\n  'Full Time',\n  'Part Time',\n  'Contract',\n  'Internship',\n];\n\nconst JobTypeFilter = ({ handleFilterChange }) => {\n  const handleChange = event => {\n    const { value } = event.target;\n    handleFilterChange(value);\n  };\n\n  return (\n    <div data-test=\"jobFilter\">\n      <select\n        name=\"jobType\"\n        id=\"jobType\"\n        onChange={handleChange}\n        data-test=\"jobType\"\n      >\n        <option value=\"\">Select a Job Type</option>\n        {jobTypes.map(jobType => (\n          <option key={jobType} value={jobType}>\n            {jobType}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n};\n\nJobTypeFilter.propTypes = {\n  handleFilterChange: PropTypes.func.isRequired,\n};\n\nexport default (JobTypeFilter);\n","const daysDiff = date => {\n  const date1 = new Date(date);\n  const date2 = new Date();\n\n  // To calculate the time difference of two dates\n  const timeDifference = date2.getTime() - date1.getTime();\n\n  const daysDifference = timeDifference / (1000 * 3600 * 24);\n\n  return Math.floor(daysDifference);\n};\n\nexport default daysDiff;\n","const ago = days => {\n  if (days === 0) {\n    return 'Today';\n  } if (days === 1) {\n    return 'Yesterday';\n  }\n  return `${days}d`;\n};\n\nexport default ago;\n","import { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport loader from '../assets/loading.svg';\nimport { filterJobTypes } from '../actions/job.action';\nimport JobTypeFilter from '../components/JobTypeFilter';\nimport daysDiff from '../helpers/daysDiff';\nimport ago from '../helpers/ago';\n\nconst JobList = ({\n  jobs, error, pending, filter, handleFilterChange,\n}) => {\n  const [filteredJobs, setFilteredJobs] = useState(jobs);\n  const posted = date => `${ago(daysDiff(date))}`;\n\n  const handleFilter = category => {\n    handleFilterChange(category);\n  };\n\n  useEffect(() => {\n    const filtered = filter\n      ? jobs.filter(job => job.type === filter)\n      : jobs;\n    setFilteredJobs(filtered);\n  }, [jobs, filter]);\n\n  return (\n\n    <section id=\"job-list\" className=\"container\">\n      <div className=\"d-flex align-center lead-container m-1\">\n        <h3>Job List</h3>\n        <JobTypeFilter handleFilterChange={handleFilter} />\n\n      </div>\n\n      <div>\n        {pending && <img className=\"center\" src={loader} alt=\"loader\" />}\n        {!pending && error && <h3>{error}</h3>}\n        {!pending && !error && filteredJobs.map(job => (\n          <Link to={`job/${job.id}`} key={job.id}>\n\n            <div className=\"card-container d-grid\">\n\n              <div className=\"job-details d-grid\">\n\n                <div className=\"company-logo\">\n                  <img src={job.company_logo} alt=\"logo\" />\n                </div>\n                <div className=\"company-info\">\n                  <p className=\"job-title\">{job.title}</p>\n                  <p className=\"company-name\">{job.company}</p>\n                  <p className=\"location capsule\">{job.location}</p>\n\n                </div>\n\n              </div>\n\n              <div className=\"tags d-flex\">\n                <p className=\"capsule\">Javascript</p>\n                <p className=\"capsule\">React</p>\n                <p className=\"capsule\">C#</p>\n                <p className=\"capsule\">Rails</p>\n                <p className=\"capsule\">SQL</p>\n              </div>\n\n              <div className=\"d-flex last-details\">\n                <p className=\"job-tag capsule\">Software Development</p>\n                <p className=\"created-at\">{posted(job.created_at)}</p>\n              </div>\n\n            </div>\n\n          </Link>\n        ))}\n      </div>\n    </section>\n  );\n};\n\nconst mapStateToProps = state => ({\n  jobs: state.jobReducer.jobs,\n  pending: state.jobReducer.pending,\n  error: state.jobReducer.error,\n  filter: state.filterReducer.filter,\n\n});\n\nconst mapDispatchToProps = dispatch => ({\n  handleFilterChange: category => dispatch(filterJobTypes(category)),\n\n});\n\nJobList.defaultProps = {\n  error: null,\n};\n\nJobList.propTypes = {\n  jobs: PropTypes.instanceOf(Array).isRequired,\n  pending: PropTypes.bool.isRequired,\n  handleFilterChange: PropTypes.func.isRequired,\n  error: PropTypes.string,\n  filter: PropTypes.string.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(JobList);\n","export default __webpack_public_path__ + \"static/media/back.46f9b388.svg\";","import PropTypes from 'prop-types';\n\nimport { useParams, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport loader from '../assets/loading.svg';\nimport back from '../assets/back.svg';\n\nconst Job = ({ jobs, pending }) => {\n  const { jobId } = useParams();\n  const [job, setJob] = useState();\n\n  useEffect(() => {\n    if (jobId) {\n      const matchedJob = jobs.find(job => job.id === jobId);\n      setJob(matchedJob);\n    }\n  }, [jobs]);\n  return (\n    <div className=\"container m-1\">\n      <Link to=\"/\" className=\"back\">\n        <img src={back} alt=\"back\" id=\"arrow\" />\n        Back to all Jobs\n      </Link>\n      <div>\n        {pending && <img src={loader} className=\"center\" alt=\"loader\" />}\n        {job && (\n        <div className=\"single-details d-grid\">\n          <div className=\"more-info\">\n            <h2 className=\"single-job-title\">{job.title}</h2>\n            <span dangerouslySetInnerHTML={{ __html: job.description }} />\n          </div>\n          <div className=\"single-job-info\">\n            <a href={job.company_url} id=\"apply-btn\" target=\"_blank\" rel=\"noreferrer\">\n              Company Website\n            </a>\n            <div>\n              <div>\n                <p className=\"uppercase\">Location</p>\n                <p className=\"capsule\">{job.location}</p>\n              </div>\n              <div>\n                <p className=\"uppercase\">Category</p>\n                <p className=\"capsule\">Software Development</p>\n              </div>\n              <div>\n                <p className=\"uppercase\">Posted</p>\n                <p className=\"capsule\">12 days ago</p>\n              </div>\n            </div>\n          </div>\n        </div>\n        )}\n\n      </div>\n    </div>\n\n  );\n};\n\nconst mapStateToProps = state => (\n  {\n    jobs: state.jobReducer.jobs,\n    pending: state.jobReducer.pending,\n  }\n);\n\nJob.propTypes = {\n  jobs: PropTypes.instanceOf(Array).isRequired,\n  pending: PropTypes.bool.isRequired,\n};\n\nexport default connect(mapStateToProps)(Job);\n","const Header = () => (\n  <nav data-test=\"header\">\n    <div className=\"container d-flex align-center\">\n      <h1>Jobs Loft</h1>\n      <li>\n        <a href=\"#job-list\">Jobs</a>\n      </li>\n    </div>\n  </nav>\n\n);\n\nexport default Header;\n","/* eslint-disable react/prop-types */\nimport '../styles/App.scss';\nimport { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport JobList from '../containers/JobList';\nimport Job from '../containers/Job';\nimport Header from './Header';\nimport { fetchJobs } from '../actions';\n\nconst App = ({ fetchJobs }) => {\n  useEffect(() => {\n    fetchJobs();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Header />\n\n      <Switch>\n        <Route path=\"/\" exact component={JobList} />\n        <Route path=\"/job/:jobId\" component={Job} />\n        <Redirect to=\"/\" />\n      </Switch>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = dispatch => (\n  {\n    fetchJobs: () => dispatch(fetchJobs()),\n  }\n\n);\n\nexport default connect(null, mapDispatchToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { GET_JOBS_REQUEST, GET_JOBS_SUCCESS, GET_JOBS_ERROR } from '../types';\n\nconst initialState = {\n  pending: false,\n  jobs: [],\n  error: null,\n};\n\nconst jobsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_JOBS_REQUEST:\n      return { ...state, pending: true, categories: [] };\n    case GET_JOBS_SUCCESS:\n      return {\n        ...state, pending: false, jobs: action.payload, error: '',\n      };\n    case GET_JOBS_ERROR:\n      return {\n        ...state, pending: false, jobs: [], error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default jobsReducer;\n","import { FILTER_JOB_TYPES } from '../types';\n\nconst initialState = { filter: '' };\n\nconst filterReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FILTER_JOB_TYPES:\n      return { ...state, filter: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import { combineReducers } from 'redux';\nimport jobReducer from './jobs';\nimport filterReducer from './filter';\n\nconst rootReducer = combineReducers({\n  jobReducer,\n  filterReducer,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n// import { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from './reducers';\n\nconst Store = createStore(rootReducer, applyMiddleware(thunk));\n\nexport default Store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport Store from './Store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={Store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}